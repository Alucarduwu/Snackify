---
export const prerender = false;
---

<section id="order-section" class="p-4 bg-gray-50 text-gray-900">
  <p id="loading-msg" class="text-center font-medium text-gray-600">Cargando órdenes...</p>
  <div id="table-container" class="overflow-auto mt-4" style="display:none;">
    <table class="min-w-full border-collapse border border-gray-300">
      <thead class="bg-indigo-600 text-white">
        <tr>
          <th class="border border-gray-300 px-4 py-2 text-left">ID Orden</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Fecha</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Estado</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Usuario</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Dirección</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Método Pago</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Productos</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Precios Unitarios</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Total</th>
        </tr>
      </thead>
      <tbody id="orders-body" class="bg-white"></tbody>
    </table>
  </div>
</section>

<script type="module" client:load>
  const loadingMsg = document.getElementById('loading-msg');
  const tableContainer = document.getElementById('table-container');
  const ordersBody = document.getElementById('orders-body');

  async function fetchOrders() {
    const token = localStorage.getItem('token');
    if (!token) {
      loadingMsg.textContent = 'No hay token JWT en localStorage.';
      return;
    }

    try {
      const res = await fetch('/api/orders', {
        headers: { Authorization: `Bearer ${token}` }
      });

      if (!res.ok) {
        const text = await res.text();
        loadingMsg.textContent = `Error al obtener órdenes: ${text}`;
        return;
      }

      const data = await res.json();
      const orders = data.user?.ordenes ?? [];

      if (orders.length === 0) {
        loadingMsg.textContent = 'No tienes órdenes.';
        return;
      }

      loadingMsg.style.display = 'none';
      tableContainer.style.display = 'block';

      ordersBody.innerHTML = '';

      orders.forEach(order => {
        const tr = document.createElement('tr');
        tr.className = 'hover:bg-gray-100';

        // Productos y precios concatenados
        let productosText = '';
        let preciosText = '';
        let total = 0;

        if (Array.isArray(order.productos) && order.productos.length > 0) {
          order.productos.forEach(p => {
            productosText += `${p.producto} x ${p.cantidad}\n`;
            preciosText += `$${p.precio}\n`;
            total += Number(p.precio) * Number(p.cantidad);
          });
        } else {
          productosText = '-';
          preciosText = '-';
        }

        // ID Orden
        const tdId = document.createElement('td');
        tdId.className = 'border border-gray-300 px-4 py-2 align-top whitespace-pre-wrap';
        tdId.textContent = order.id ?? '-';
        tr.appendChild(tdId);

        // Fecha
        const tdFecha = document.createElement('td');
        tdFecha.className = 'border border-gray-300 px-4 py-2 align-top whitespace-pre-wrap';
        tdFecha.textContent = order.fecha ? new Date(order.fecha).toLocaleString() : '-';
        tr.appendChild(tdFecha);

        // Estado
        const tdEstado = document.createElement('td');
        tdEstado.className = 'border border-gray-300 px-4 py-2 align-top whitespace-pre-wrap capitalize';
        tdEstado.textContent = order.estado ?? '-';
        tr.appendChild(tdEstado);

        // Usuario (nombre)
        const tdUser = document.createElement('td');
        tdUser.className = 'border border-gray-300 px-4 py-2 align-top whitespace-pre-wrap';
        tdUser.textContent = order.username ?? '-';
        tr.appendChild(tdUser);

        // Dirección
        const tdDireccion = document.createElement('td');
        tdDireccion.className = 'border border-gray-300 px-4 py-2 align-top whitespace-pre-wrap';
        tdDireccion.textContent = order.direccion ?? '-';
        tr.appendChild(tdDireccion);

        // Método de pago
        const tdMetodoPago = document.createElement('td');
        tdMetodoPago.className = 'border border-gray-300 px-4 py-2 align-top whitespace-pre-wrap';
        tdMetodoPago.textContent = order.metodo_pago ?? '-';
        tr.appendChild(tdMetodoPago);

        // Productos
        const tdProductos = document.createElement('td');
        tdProductos.className = 'border border-gray-300 px-4 py-2 align-top whitespace-pre-wrap font-mono text-sm';
        tdProductos.textContent = productosText.trim();
        tr.appendChild(tdProductos);

        // Precios unitarios
        const tdPrecios = document.createElement('td');
        tdPrecios.className = 'border border-gray-300 px-4 py-2 align-top whitespace-pre-wrap font-mono text-sm';
        tdPrecios.textContent = preciosText.trim();
        tr.appendChild(tdPrecios);

        // Total
        const tdTotal = document.createElement('td');
        tdTotal.className = 'border border-gray-300 px-4 py-2 align-top whitespace-pre-wrap font-semibold';
        tdTotal.textContent = `$${total.toFixed(2)}`;
        tr.appendChild(tdTotal);

        ordersBody.appendChild(tr);
      });
    } catch (error) {
      loadingMsg.textContent = `Error en la llamada a la API: ${error.message}`;
    }
  }

  document.addEventListener('DOMContentLoaded', fetchOrders);
</script>
